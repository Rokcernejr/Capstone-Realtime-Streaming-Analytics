version : '2'

services:
  twitter:
    build:
      context: ./data-producers
    container_name: twitter_01
    ports:
      - "9999:9999"
    volumes:
      - ./data-producers/Twitter:/home/ds
    command: jupyter-notebook --no-browser --port 9999 --ip='*' --allow-root
    environment:
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - CONSUMER_KEY=${CONSUMER_KEY}
      - CONSUMER_SECRET=${CONSUMER_SECRET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
    depends_on:
      - manager

  iex:
    build:
      context: ./data-producers
    container_name: iex_01
    ports:
      - "8888:8888"
    volumes:
      - ./data-producers/IEX:/home/ds
    command: jupyter-notebook --no-browser --port 8888 --ip='*' --allow-root
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
    depends_on:
      - manager


  analytics:
    build:
      context: ./data-producers
    container_name: analytics_01
    ports:
      - "7788:7788"
    volumes:
      - ./data-producers/Analytics:/home/ds
    command: jupyter-notebook --no-browser --port 7788 --ip='*' --allow-root
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
    depends_on:
      - manager

  manager:
    build:
      context: ./data-producers
    container_name: manager_01
    ports:
      - "7777:7777"
    volumes:
      - ./data-producers/Manager:/home/ds
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
    command: jupyter-notebook --no-browser --port 7777 --ip='*' --allow-root
    depends_on:
      - data_store

  data_store:
    image: redis:alpine


  db:
    restart: always
    image: mysql:5.6.36
    container_name: mysqldb_01
    volumes:
      - ./data-producers/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PWD}"
    ports:
      - "${DB_PORT}:${DB_PORT}"
    expose:
      - "${DB_PORT}"

  db-data:
    restart: always
    container_name: mongodb_01
    image: mongo:3.6.0
    ports:
      - "27017:27017"
    volumes:
      - ./data-producers/db-data:/data/db

  mongodbbackup:
    image: 'deenoize/mongodb-backup-s3:latest'
    links:
      - db-data
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BUCKET=brandyn-twitter-sentiment-analysis
      - BACKUP_FOLDER=DBBackup/Development/
      - INIT_BACKUP=true
      # - DISABLE_CRON=true
      - CRON_TIME=0 4 * * 1-5
      - MONGODB_HOST=db-data
      - MONGODB_PORT=27017
